{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///D:/AI-Workspace/employee-identity-portal/src/app/api/send-email/route.ts"],"sourcesContent":["export async function POST(req: Request) {\r\n  try {\r\n    const { to, subject, body, system, payload } = await req.json();\r\n\r\n    const timestamp = new Date().toISOString();\r\n    // Mock logging to server console\r\n    console.log(\"[mock-email] sending email\", {\r\n      timestamp,\r\n      to,\r\n      subject,\r\n      system,\r\n      preview: String(body).slice(0, 200),\r\n      payloadSnippet: JSON.stringify(payload ?? {}).slice(0, 200),\r\n    });\r\n\r\n    // Simulate async queuing delay\r\n    await new Promise((r) => setTimeout(r, 150));\r\n\r\n    return Response.json({ ok: true, message: \"Email queued (mock)\", to, system, timestamp });\r\n  } catch (e: any) {\r\n    console.error(\"[mock-email] failed to queue email\", e?.message || e);\r\n    return new Response(\r\n      JSON.stringify({ ok: false, error: \"Invalid request body\" }),\r\n      { status: 400, headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;AAAO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,IAAI;QAE7D,MAAM,YAAY,IAAI,OAAO,WAAW;QACxC,iCAAiC;QACjC,QAAQ,GAAG,CAAC,8BAA8B;YACxC;YACA;YACA;YACA;YACA,SAAS,OAAO,MAAM,KAAK,CAAC,GAAG;YAC/B,gBAAgB,KAAK,SAAS,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,GAAG;QACzD;QAEA,+BAA+B;QAC/B,MAAM,IAAI,QAAQ,CAAC,IAAM,WAAW,GAAG;QAEvC,OAAO,SAAS,IAAI,CAAC;YAAE,IAAI;YAAM,SAAS;YAAuB;YAAI;YAAQ;QAAU;IACzF,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,sCAAsC,GAAG,WAAW;QAClE,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;YAAE,IAAI;YAAO,OAAO;QAAuB,IAC1D;YAAE,QAAQ;YAAK,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IAEnE;AACF","debugId":null}}]
}