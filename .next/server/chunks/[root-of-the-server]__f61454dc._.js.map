{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///D:/AI-Workspace/employee-identity-portal/src/app/api/pf/oidc/route.ts"],"sourcesContent":["export async function GET() {\r\n  // Mocked list of OIDC connections created by the employee in Ping Federate\r\n  const data = [\r\n    {\r\n      connectionId: \"oidc-salesforce\",\r\n      application: \"Salesforce\",\r\n      clientId: \"sf_123_client\",\r\n      redirectUris: [\"https://app.salesforce.com/callback\"],\r\n      grantTypes: [\"authorization_code\", \"refresh_token\"],\r\n      createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\r\n      status: \"active\",\r\n    },\r\n    {\r\n      connectionId: \"oidc-slack\",\r\n      application: \"Slack\",\r\n      clientId: \"slk_456_client\",\r\n      redirectUris: [\"https://slack.com/callback\"],\r\n      grantTypes: [\"authorization_code\"],\r\n      createdAt: new Date(Date.now() - 12 * 24 * 60 * 60 * 1000).toISOString(),\r\n      status: \"active\",\r\n    },\r\n    {\r\n      connectionId: \"oidc-internal-portal\",\r\n      application: \"Internal Portal\",\r\n      clientId: \"int_789_client\",\r\n      redirectUris: [\"https://portal.company.com/oidc/cb\"],\r\n      grantTypes: [\"authorization_code\", \"client_credentials\"],\r\n      createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),\r\n      status: \"disabled\",\r\n    },\r\n  ];\r\n\r\n  // Only return the 5 most important values per connection in a flattened shape\r\n  const summarized = data.map((c) => ({\r\n    connectionId: c.connectionId,\r\n    application: c.application,\r\n    clientId: c.clientId,\r\n    status: c.status,\r\n    createdAt: c.createdAt,\r\n  }));\r\n\r\n  return Response.json({ ok: true, data: summarized });\r\n}"],"names":[],"mappings":";;;AAAO,eAAe;IACpB,2EAA2E;IAC3E,MAAM,OAAO;QACX;YACE,cAAc;YACd,aAAa;YACb,UAAU;YACV,cAAc;gBAAC;aAAsC;YACrD,YAAY;gBAAC;gBAAsB;aAAgB;YACnD,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,WAAW;YACrE,QAAQ;QACV;QACA;YACE,cAAc;YACd,aAAa;YACb,UAAU;YACV,cAAc;gBAAC;aAA6B;YAC5C,YAAY;gBAAC;aAAqB;YAClC,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,WAAW;YACtE,QAAQ;QACV;QACA;YACE,cAAc;YACd,aAAa;YACb,UAAU;YACV,cAAc;gBAAC;aAAqC;YACpD,YAAY;gBAAC;gBAAsB;aAAqB;YACxD,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,WAAW;YACtE,QAAQ;QACV;KACD;IAED,8EAA8E;IAC9E,MAAM,aAAa,KAAK,GAAG,CAAC,CAAC,IAAM,CAAC;YAClC,cAAc,EAAE,YAAY;YAC5B,aAAa,EAAE,WAAW;YAC1B,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE,MAAM;YAChB,WAAW,EAAE,SAAS;QACxB,CAAC;IAED,OAAO,SAAS,IAAI,CAAC;QAAE,IAAI;QAAM,MAAM;IAAW;AACpD","debugId":null}}]
}